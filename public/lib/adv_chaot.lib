<?php

// Имена и поля таблиц
define('TABLE_ADV_CHAOT','adv_chaot');
define('FIELD_ADV_CHAOT','');

define('TABLE_ADV_CHAOT_EKZ','adv_chaot_ekz');
define('FIELD_ADV_CHAOT_EKZ','');

define('TABLE_ADV_CHAOT_AREAS','adv_chaot_areas');
define('FIELD_ADV_CHAOT_AREAS','');

$adv_chaot_week_flags_hash = array(
    1 => translate('Понедельник'),
    2 => translate('Вторник'),
    4 => translate('Среда'),
    8 => translate('Четверг'),
    16 => translate('Пятница'),
    32 => translate('Суббота'),
    64 => translate('Воскресенье'),
);

define('ADV_CHAOT_FLAG_ACTIVE', 0x000001);
define('ADV_CHAOT_FLAG_RANDOM_PERS', 0x000002);
define('ADV_CHAOT_FLAG_RANDOM_BOTS', 0x000004);
define('ADV_CHAOT_FLAG_BOTS', 0x000008);
define('ADV_CHAOT_FLAG_RETURN_LOC', 0x000010);
define('ADV_CHAOT_FLAG_RETURN_HOME', 0x000020);
define('ADV_CHAOT_FLAG_RAZDELENIE', 0x000040);
define('ADV_CHAOT_FLAG_PROD_TIME', 0x000080);

$adv_chaot_flags_hash = array(
    ADV_CHAOT_FLAG_ACTIVE => 'Хаотичная битва активна',
    ADV_CHAOT_FLAG_RANDOM_PERS => 'Честная расстановка игроков (Только если нет разделения по уровням, в разделении и так честная)',
    ADV_CHAOT_FLAG_RANDOM_BOTS => 'Честная расстановка ботов (Только если нет разделения по уровням, боты не учавствуют в разделенных по уровням битвах)',
    ADV_CHAOT_FLAG_BOTS => 'Боты с локации учавствуют в этой битве (Только если нет разделения по уровням)',
    ADV_CHAOT_FLAG_RETURN_LOC => 'Возвращать персонажа обратно на локацию где он был',
    ADV_CHAOT_FLAG_RETURN_HOME => 'Возвращать персонажа в город',
    ADV_CHAOT_FLAG_RAZDELENIE => 'Разделение битв по уровням активно',
    ADV_CHAOT_FLAG_PROD_TIME => 'Следующая битва через указанное время',
);

function adv_chaot_get($ref=false, $add='') {
    global $db_path;
    return common_get($db_path,TABLE_ADV_CHAOT,$ref,$add);
}

function adv_chaot_list($ref=false, $add='', $field_list='*') {
    global $db_path;
    return common_list($db_path,TABLE_ADV_CHAOT,$ref,$add,$field_list);
}

function adv_chaot_count($ref=false, $add='') {
    global $db_path;
    return common_count($db_path, TABLE_ADV_CHAOT, $ref, $add);
}

function adv_chaot_save($param) {
    global $db_path;
    return common_save($db_path,TABLE_ADV_CHAOT,$param,FIELD_ADV_CHAOT);
}

function adv_chaot_delete($ref) {
    global $db_path;
    if (!$ref) return false;
    common_delete($db_path,TABLE_ADV_CHAOT,$ref);
    return true;
}


//////////////////////////////////////

function adv_chaot_ekz_get($ref=false, $add='') {
    global $db_path;
    return common_get($db_path,TABLE_ADV_CHAOT_EKZ,$ref,$add);
}

function adv_chaot_ekz_list($ref=false, $add='', $field_list='*') {
    global $db_path;
    return common_list($db_path,TABLE_ADV_CHAOT_EKZ,$ref,$add,$field_list);
}

function adv_chaot_ekz_count($ref=false, $add='') {
    global $db_path;
    return common_count($db_path, TABLE_ADV_CHAOT_EKZ, $ref, $add);
}

function adv_chaot_ekz_save($param) {
    global $db_path;
    return common_save($db_path,TABLE_ADV_CHAOT_EKZ,$param,FIELD_ADV_CHAOT_EKZ);
}

function adv_chaot_ekz_delete($ref) {
    global $db_path;
    if (!$ref) return false;
    common_delete($db_path,TABLE_ADV_CHAOT_EKZ,$ref);
    return true;
}

//////////////////////////////////////

function adv_chaot_areas_get($ref=false, $add='') {
    global $db_path;
    return common_get($db_path,TABLE_ADV_CHAOT_AREAS,$ref,$add);
}

function adv_chaot_areas_list($ref=false, $add='', $field_list='*') {
    global $db_path;
    return common_list($db_path,TABLE_ADV_CHAOT_AREAS,$ref,$add,$field_list);
}

function adv_chaot_areas_count($ref=false, $add='') {
    global $db_path;
    return common_count($db_path, TABLE_ADV_CHAOT_AREAS, $ref, $add);
}

function adv_chaot_areas_save($param) {
    global $db_path;
    return common_save($db_path,TABLE_ADV_CHAOT_AREAS,$param,FIELD_ADV_CHAOT_AREAS);
}

function adv_chaot_areas_delete($ref) {
    global $db_path;
    if (!$ref) return false;
    common_delete($db_path,TABLE_ADV_CHAOT_AREAS,$ref);
    return true;
}

$function_test_admin = false;
$function_admin_ids = array(1,DEV_ACCOUNT_ID);
function adv_chaot_cron(){
    global $NODE_NUMS,$function_test_admin,$function_admin_ids,$kind_info;

    if($function_test_admin){
        /*ini_set('error_reporting', E_ERROR);
        ini_set('display_errors', 1);
        ini_set('display_startup_errors', 1);*/
    }

    $img_haos = '<img title="Хаотичная битва" src="images/haos_battle.gif" border=0 align="absmiddle">';
	$img_location = '<img title="Локация" src="/images/compass.png" border=0 align="absmiddle">';
    $adv_chaot_list = adv_chaot_list(false, sql_pholder(" AND (`flags` & ?) != 0",
        ADV_CHAOT_FLAG_ACTIVE
    ));
    if($function_test_admin){
        echo "<h3>Выводим Хаотичную</h3><pre>";
        print_r($adv_chaot_list);
        echo '</pre><h3>Выводим время UNIX</h3>'.time_current();
        echo '<h3>Подробная информация</h3>';
    }
    if ($adv_chaot_list){
        foreach ($adv_chaot_list as $key => $value) {
            if (!($value['week_flags'] & (1 << date("N")-1))) continue; // проверка дня недели
            //if($legendary_ekz){ continue; } //Мы не позволяем запускать несколько битв.
            $start_time = (time_current() - $value['stime']);
            if($function_test_admin) echo $start_time;

            $area = area_get($value['area_id']);

            if(abs($start_time) < 600 && $start_time < 0){
                //За 10 минут выводим сообщения о старте битвы.
                if($function_test_admin) {
                    foreach ($function_admin_ids as $user_id){
                        chat_msg_send_system($img_haos.' Через '.html_period_str(abs($start_time)).' начнется Хаотичная Битва "'.$value['title'].'" на локации "'.$area['title'].'" <a href="#" onclick="top.frames[\'main_frame\'].frames[\'main_hidden\'].location.href = \'haot.php?accept=1\'; return false;">Принять участие</a>',CHAT_CHF_USER, $user_id, true);
                    }
                }else{
                    chat_msg_send_system('<b style=color:darkgreen>Через '.html_period_str(abs($start_time)).' начнется  <b style=color:darkred;>«'.$img_haos.' '.$value['title'].'»</b> на локации <b style=color:darkred;>«'.$img_location.' '.$area['title'].'»</b> <a href="#" onclick="top.frames[\'main_frame\'].frames[\'main_hidden\'].location.href = \'haot.php?accept=1\'; return false;">[Принять участие]</a></b>',CHAT_CHF_AREA, null , true);
                }
                continue; //Старт еще не возможен.
            }
            if((time_current() - $value['stime']) < 0){
                if($function_test_admin) {
                    echo(time_current() - $value['stime']);
                    echo "Старт еще не доступен";
                }
                continue; //Старт еще не возможен.
            }


            //Запуск хаота
            $area_id = $area['id'];
            NODE_SWITCH($area['node_num']);

            if($value['flags'] & ADV_CHAOT_FLAG_PROD_TIME && $value['prod_time']){
                //Если нам нужно эту хаочину пускать каждые N секунд xD
                adv_chaot_save(array(
                    'id' => $value['id'],
                    '_set' => sql_pholder(" stime = ? ", time_current() + $value['prod_time']),
                ));
            }else{
                adv_chaot_save(array(
                    'id' => $value['id'],
                    '_set' => sql_pholder(" stime = ? + start_time ", strtotime("+1 day 00:00")),
                ));
            }

            $session_list = session_list($area_id,0,true, '', '*', true);
            if (!$session_list) {
                if($function_test_admin) {
                    foreach ($function_admin_ids as $user_id){
                        chat_msg_send_system($img_haos.' Хаотичная битва "'.$value['title'].'" Не стартовала! Причина: Локация пуста!',CHAT_CHF_USER,$user_id, true);
                    }
                }else{
                    chat_msg_send_system('<b style=color:darkred;>«'.$img_haos.' '.$value['title'].'»</b><b style=color:darkgreen> Не стартовала! Причина: Локация пуста!</b>',CHAT_CHF_AREA, null, true);
                }
                return;
            }
            $user_ids = get_hash($session_list,'uid','uid');

            if (!area_lock($area_id)) {
                if($function_test_admin) {
                    foreach ($function_admin_ids as $user_id){
                        chat_msg_send_system($img_haos.' Хаотичная битва "'.$value['title'].'" Не стартовала! Причина: Не удалось!',CHAT_CHF_USER,$user_id,true);
                    }
                }else{
                    chat_msg_send_system('<b style=color:darkred;>«'.$img_haos.' '.$value['title'].'»</b> <b style=color:darkgreen>Не стартовала! Причина: Не удалось!</b>',CHAT_CHF_AREA, null, true);
                }
                return;
            }

            $user_list = user_list(array('id' => $user_ids));

            //Раздатка битв подключение игроков
            if($value['flags'] & ADV_CHAOT_FLAG_RAZDELENIE){
                //Если нужно разделять и властвовать :)
                $battles = json_decode($value['level_rate'],true);

                $user_battle = array(); //Подготовим список битв с участниками
                $user_hash = make_hash($user_list, 'id', false);

                common_fldsort($user_hash, true, 'level');

                $team_b  = false;
                foreach($battles as $k=>$battle){
                    $user_battle[$k] = array();
                    $team_w = array();
                    foreach($user_hash as $user){
                        if(in_array($user['level'],$battle)){
                            $team = $team_b ? 2 : 1;
                            $team_b = $team_b ? false : true;
                            $user_battle[$k][$user['id']] = array('user_id' => $user['id'], 'team' => $team);
                            $team_w[$team]++;
                        }
                    }
                    if($team_w[1] > $team_w[2]){
                        //Если перевес участников в первой команде добавить кого-нибудь бота например ко второй команде
                    }elseif($team_w[2] > $team_w[1]){
                        //Если перевес участников во второй команде добавить кого-нибудь бота например к первой команде
                    }

                    //$user_battle[1][] = array('bot_id' => 493, 'team' => 1);
                    //$user_battle[2][] = array('bot_id' => 492, 'team' => 2);
                }

                foreach($user_battle as $k=>$battle){
                    if(count($battle) < $value['min_user_cnt'] * 2){
                        if($function_test_admin) {
                            echo "Не набрано количество ".count($battle)."/".$value['max_user_cnt'] * 2;
                            foreach ($function_admin_ids as $user_id){
                                chat_msg_send_system($img_haos.' Не набрано необходимое количество воинов для запуска Хаотичной битвы "'.$value['title'].'" ['.min($battles[$k]).'-'.max($battles[$k]).']',CHAT_CHF_USER,$user_id, true);
                            }
                        }else{
                            chat_msg_send_system('<b style=color:darkgreen>Не набрано необходимое количество воинов для запуска <b style=color:darkred;>«'.$img_haos.' '.$value['title'].'»</b> <b style=color:darkred;>['.min($battles[$k]).'-'.max($battles[$k]).']</b></b>',CHAT_CHF_AREA, null, true);
                        }

                        //Если не набрали кол-во участников нужно отнести игроков по домам xD
                        $user_list_back = array();
                        foreach ($battle as $user_id=>$val){
                            $user = $user_hash[$val['user_id']];
                            if($user) $user_list_back[$user['id']] = $user;
                        }
                        if($user_list_back) adv_chaot_user_backhome($user_list_back);

                        continue; //Еще не достигли нужного количества игроков.
                    }

                    $fight = array(
                        'area_id' => $area_id,
                        'title' => 'Хаотичная битва '.$value['title'].' ['.min($battles[$k]).'-'.max($battles[$k]).']',
                        'type' => FIGHT_TYPE_CHAOTIC,
                        'timeout' => ($value['ftime'] ? $value['ftime'] : 10),
                        'level_min' => min($battles[$k]),
                        'level_max' => max($battles[$k]),
                        'fight_flags' => FIGHT_FLAG_BLIND,
                        'adv_chaot_id' => $value['id'],
                    );

                    $status = fight_start($fight,$battle);

                    area_unlock($area_id);

                    if($status){
                        if($function_test_admin) {
                            foreach ($function_admin_ids as $user_id){
                                chat_msg_send_system($img_haos.' <a href=\'/fight_info.php?fight_id='.$status.'\' target=\'_blank\'> Хаотичная битва "'.$value['title'].'" ['.min($battles[$k]).'-'.max($battles[$k]).']</a> Началась!',CHAT_CHF_USER,$user_id, true);
                            }
                        }else{
                            chat_msg_send_system('<a href=\'/fight_info.php?fight_id='.$status.'\' target=\'_blank\'> <b style=color:darkred;>«'.$img_haos.' '.$value['title'].' ['.min($battles[$k]).'-'.max($battles[$k]).']» </b></a> <b style=color:darkgreen>Началась!</b>',CHAT_CHF_AREA, null, true);
                        }
                    }else{
                        if($function_test_admin) {
                            foreach ($function_admin_ids as $user_id){
                                chat_msg_send_system($img_haos.' Хаотичная битва "'.$value['title'].'" Не стартовала! Причина: Не удалось начать бой!',CHAT_CHF_USER,$user_id, true);
                            }
                        }else{
                            chat_msg_send_system('<b style=color:darkred;>«'.$img_haos.' '.$value['title'].'»</b> <b style=color:darkgreen>Не стартовала! Причина: Не удалось начать бой!</b>',CHAT_CHF_AREA, null, true);
                        }

                        //Если не смогли запустить бой, отправляем домой
                        $user_list_back = array();
                        foreach ($battle as $user_id=>$val){
                            $user = $user_hash[$val['user_id']];
                            if($user) $user_list_back[$user['id']] = $user;
                        }
                        if($user_list_back) adv_chaot_user_backhome($user_list_back);

                    }
                }
                area_unlock($area_id);
            }else{ //Стандартная хаотичка xD
                $fight = array(
                    'area_id' => $area_id,
                    'title' => 'Хаотичная битва '.$value['title'],
                    'type' => FIGHT_TYPE_CHAOTIC,
                    'timeout' => ($value['ftime'] ? $value['ftime'] : 10),
                    'level_min' => 1,
                    'level_max' => 99,
                    'fight_flags' => FIGHT_FLAG_BLIND,
                    'adv_chaot_id' => $value['id'],
                );
                $pers_data = array();

                $team = 1;
                foreach ($user_list as $user){
                    if($value['flags'] & ADV_CHAOT_FLAG_RANDOM_PERS) $team = ($team == 1 ? 2 : 1);
                    else $team = rand(1,2);
                    $pers_data[] = array('user_id' => $user['id'], 'team' => $team);
                }

                if($value['flags'] & ADV_CHAOT_FLAG_BOTS){
                    $bot_list = bot_list(null,0,$area_id,0);
                    foreach ($bot_list as $bot) {
                        if ($value['flags'] & ADV_CHAOT_FLAG_RANDOM_BOTS) $team = ($team == 1 ? 2 : 1);
                        else $team = rand(1, 2);
                        $pers_data[] = $pers_data[] = array('bot_id' => $bot['id'], 'team' => $team);
                    }
                }

                $status = fight_start($fight,$pers_data);

                area_unlock($area_id);

                if($status){
                    if($function_test_admin) {
                        foreach ($function_admin_ids as $user_id){
                            chat_msg_send_system($img_haos.' <a href=\'/fight_info.php?fight_id='.$status.'\' target=\'_blank\'> Хаотичная битва "'.$value['title'].'" Началась!',CHAT_CHF_USER,$user_id, true);
                        }
                    }else{
                        chat_msg_send_system('<a href=\'/fight_info.php?fight_id='.$status.'\' target=\'_blank\'> <b style=color:darkred;>«'.$img_haos.' '.$value['title'].'»</b><b style=color:darkgreen> Началась!</b>',CHAT_CHF_AREA,null,true);
                    }
                }else{
                    if($function_test_admin) {
                        foreach ($function_admin_ids as $user_id){
                            chat_msg_send_system($img_haos.' Хаотичная битва "'.$value['title'].'" Не стартовала! Причина: Не удалось начать бой!',CHAT_CHF_USER,$user_id, true);
                        }
                    }else{
                        chat_msg_send_system('<b style=color:darkred;>«'.$img_haos.' '.$value['title'].'»</b><b style=color:darkgreen> Не стартовала! Причина: Не удалось начать бой!</b>',CHAT_CHF_AREA,null, true);
                    }

                    //Если не смогли запустить бой, отправляем домой
                    if($user_list) adv_chaot_user_backhome($user_list);
                }
            }
        }
    }
}

function adv_chaot_user_backhome($user_list){
    global $kind_info;
    foreach ($user_list as $user){
        if($user['area_id_transfer']){
            user_save(array(
                'id' => $user['id'],
                'area_id' => $user['area_id_transfer'],
                'area_id_transfer' => 0,
                'area_ftime' => 0,
            ));
        }else{
            user_save(array(
                'id' => $user['id'],
                'area_id' => $kind_info[$user['kind']]['city_area_id'],
                'area_id_transfer' => 0,
                'area_ftime' => 0,
            ));
        }
    }
}